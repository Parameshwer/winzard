{"version":3,"sources":["./src/app/hr/org-win/goal-management/goal-management.component.html","./src/app/hr/org-win/org-win/org-win.component.html","./src/app/hr/org-win/people-assessment/people-assessment.component.html","./src/app/hr/org-win/talent-management/talent-management.component.html","./src/app/hr/hr.service.ts","./src/app/hr/org-win/goal-management/goal-management.component.scss","./src/app/hr/org-win/goal-management/goal-management.component.ts","./src/app/hr/org-win/org-win-routing.module.ts","./src/app/hr/org-win/org-win.module.ts","./src/app/hr/org-win/org-win/org-win.component.scss","./src/app/hr/org-win/org-win/org-win.component.ts","./src/app/hr/org-win/people-assessment/people-assessment.component.scss","./src/app/hr/org-win/people-assessment/people-assessment.component.ts","./src/app/hr/org-win/talent-management/talent-management.component.scss","./src/app/hr/org-win/talent-management/talent-management.component.ts"],"names":[],"mappings":"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","file":"org-win-org-win-module.js","sourcesContent":["export default \"<p>goal-management works!</p>\\n\"","export default \"<div class=\\\"app-inner-container\\\">\\n        <div class=\\\"sidebar\\\">\\n            <app-sidebar></app-sidebar>\\n        </div>\\n        <div class=\\\"page-container\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n    <!-- E8E8E8 -->\"","export default \"<div class=\\\"inner-page with-drawer\\\">\\n    <mat-horizontal-stepper #stepper class=\\\"no-indications\\\">\\n        <mat-step *ngIf=\\\"!loader && !dataSource?.data?.length\\\">\\n            <div class=\\\"intial-view\\\">\\n                <div class=\\\"page-heading\\\">\\n                    <h3 class=\\\"heading\\\">People Assessment</h3>\\n                </div>\\n                <div class=\\\"view-body\\\">\\n                    <img src=\\\"../../../../assets/images/tm-icon.svg\\\"/>\\n                    <p>This is where you initiate People Assessment Reviews</p>\\n                    <button class=\\\"custom-btn\\\" matStepperNext>INTIATE</button>\\n                </div>\\n            </div>\\n        </mat-step>\\n        <mat-step>\\n            <mat-drawer-container class=\\\"drawer-container\\\" [hasBackdrop]=\\\"true\\\">\\n                <mat-drawer-content class=\\\"drawer-sidenav-content\\\">\\n                    <div class=\\\"page-heading\\\">\\n                        <h3 class=\\\"heading\\\">People Assessment</h3>\\n                        <!-- (click)=\\\"openUserSidenav(true)\\\" -->\\n                        <button mat-button class=\\\"custom-btn\\\" (click)=\\\"StartNewTalent();\\\">\\n                            Start new\\n                        </button>\\n                    </div>\\n                    <ng-container *ngIf=\\\"!loader && dataSource?.data?.length\\\">\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\" matSort>\\n                            <!-- Position Column -->\\n                            <ng-container matColumnDef=\\\"sNo\\\">\\n                                <th mat-header-cell *matHeaderCellDef >S.no</th>\\n                                <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ i + 1 }}</td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"start\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">Start</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.start | date: \\\"dd/LLL/yyy\\\" }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <!-- Weight Column -->\\n                            <ng-container matColumnDef=\\\"end\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">End</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.end | date: \\\"dd/LLL/yyy\\\" }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <!-- Symbol Column -->\\n                            <ng-container matColumnDef=\\\"sent\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">Sent to</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.sent }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"submited\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">\\n                                    Submited by\\n                                </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.submited }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"dueEmp\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Due</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <span class=\\\"due-cell\\\" (click)=\\\"getDueList(element)\\\">{{\\n              element.dueEmp\\n            }}</span>\\n                                </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"status\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <div class=\\\"s-{{ element?.status }}\\\">\\n                                        <mat-form-field class=\\\"custom-input status-field\\\">\\n                                            <mat-select [(ngModel)]=\\\"element.status\\\"\\n                                                (selectionChange)=\\\"onStatusChange(element)\\\">\\n                                                <mat-option *ngFor=\\\"let status of statusList\\\" [value]=\\\"status.id\\\">\\n                                                    {{ status.name}}\\n                                                </mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n                                    </div>\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"edit\\\">\\n                                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">Edit</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"reminder-cell text-center\\\">\\n                                    <mat-icon (click)=\\\"onEdit(element)\\\"\\n                                        [ngClass]=\\\"{'disable-click':element.status != '1'}\\\">edit\\n                                    </mat-icon>\\n                                </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"reminder\\\">\\n                                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">\\n                                    Reminder\\n                                </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"reminder-cell text-center\\\">\\n                                    <mat-icon (click)=\\\"onReminder(element)\\\"\\n                                        [ngClass]=\\\"{'disable-click':element.status != '1'}\\\">\\n                                        notifications_none\\n                                    </mat-icon>\\n                                </td>\\n                            </ng-container>\\n\\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n                        </table>\\n                        <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator> -->\\n                        <div class=\\\"custom-pagination\\\">\\n                            <ngb-pagination [(page)]=\\\"pageDetails.page\\\" [pageSize]=\\\"pageDetails.pageSize\\\"\\n                                [collectionSize]=\\\"pageDetails.total\\\" (pageChange)=\\\"pageChange()\\\"></ngb-pagination>\\n                            <mat-form-field class=\\\"custom-input status-field\\\">\\n                                <mat-select [(value)]=\\\"pageDetails.pageSize\\\" (valueChange)=\\\"pageItemsChange()\\\">\\n                                    <mat-option [value]=\\\"5\\\">5 / page</mat-option>\\n                                    <mat-option [value]=\\\"10\\\">10 / page</mat-option>\\n                                    <mat-option [value]=\\\"20\\\">20 / page</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                    </ng-container>\\n                    <p class=\\\"no-data loader\\\" *ngIf=\\\"loader\\\">\\n                        <mat-spinner></mat-spinner>\\n                    </p>\\n                    <ng-container *ngIf=\\\"!loader && !dataSource?.data?.length\\\">\\n                        <p class=\\\"no-data\\\">This is where you initiate People Assessment Reviews</p>\\n                    </ng-container>\\n                </mat-drawer-content>\\n\\n                <mat-drawer #drawer mode=\\\"over\\\" position=\\\"end\\\">\\n                    <div class=\\\"sidenav-container\\\" style=\\\"width: 689px;\\\" *ngIf=\\\"!checkActiveTm\\\">\\n                        <div class=\\\"sidenav-heading\\\">\\n                            <span class=\\\"title\\\">Start People Assessment</span>\\n                            <span class=\\\"flex-1\\\"></span>\\n                            <mat-icon (click)=\\\"closeSidenav()\\\">close</mat-icon>\\n                        </div>\\n                        <div class=\\\"sidenav-body animate__animated \\\" \\n                        [ngClass]=\\\"{'animate__fadeOut':intiateSucess}\\\">\\n                            <div class=\\\"sidenav-content\\\">\\n                                <div class=\\\"d-flex flex-column\\\" *ngIf=\\\"!sideNavLoader\\\">\\n                                    <h5 class=\\\"heading\\\">Employee List</h5>\\n                                    <div class=\\\"d-flex\\\">\\n                                        <div class=\\\"custom-field\\\">\\n                                            <label>Select by Grade</label>\\n                                            <!--  -->\\n                                            <mat-form-field class=\\\"custom-input\\\" appearance=\\\"none\\\">\\n                                                <mat-select multiple placeholder=\\\"Select Grade\\\" [formControl]=\\\"grades\\\" (selectionChange)=\\\"onGradesChages($event)\\\">\\n                                                  <mat-select-trigger>\\n                                                    {{getDisplayName()}}\\n                                                  </mat-select-trigger>\\n                                                  <mat-option #allSelected\\n                                                        (click)=\\\"isSelectAllClicked=true;\\\" [value]=\\\"0\\\"\\n                                                        [disabled]=\\\"disableSelectAll\\\">Select\\n                                                        All</mat-option>\\n                                                    <mat-option *ngFor=\\\"let grade of gradesList\\\" [value]=\\\"grade\\\"\\n                                                        [disabled]=\\\"checkDisable(grade['_id'])\\\"\\n                                                       >\\n                                                        {{ grade.gradeName }}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"custom-field date-field\\\">\\n                                            <label>Start Date</label>\\n                                            <mat-form-field class=\\\"custom-input\\\" appearance=\\\"none\\\">\\n                                                <input matInput [matDatepicker]=\\\"picker\\\" [max]=\\\"endDate.value\\\"\\n                                                    [formControl]=\\\"startDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\n                                                    (click)=\\\"picker.open()\\\" />\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                <mat-datepicker #picker></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"custom-field date-field\\\">\\n                                            <label>End Date</label>\\n                                            <mat-form-field class=\\\"custom-input\\\" appearance=\\\"none\\\">\\n                                                <input matInput [matDatepicker]=\\\"picker1\\\" [min]=\\\"startDate.value\\\"\\n                                                    [formControl]=\\\"endDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\n                                                    (click)=\\\"picker1.open()\\\" />\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #picker1></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"filter-check\\\" *ngIf=\\\"userInfo?.data?.user?.role == 1\\\">\\n                                        <mat-checkbox [(ngModel)]=\\\"onlySupervisors\\\"\\n                                            (change)=\\\"onCheckSupervisors(onlySupervisors)\\\">Only Supervisors\\n                                        </mat-checkbox>\\n                                    </div>\\n                                    <div class=\\\"emp-list\\\" *ngIf=\\\"empList?.length\\\">\\n                                        <table>\\n                                            <thead>\\n                                                <th>Employee name</th>\\n                                                <th>Employee Id</th>\\n                                            </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let emp of empList\\\">\\n                                                    <td>\\n                                                        <span>{{ emp.fullname }}</span>\\n                                                    </td>\\n                                                    <td>\\n                                                        <span>{{ emp.empId }}</span>\\n                                                    </td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                                <p class=\\\"no-data loader sideNav-loader\\\" *ngIf=\\\"sideNavLoader\\\">\\n                                    <mat-spinner></mat-spinner>\\n                                </p>\\n                            </div>\\n                            <div class=\\\"sidenav-footer\\\">\\n                                <button mat-button class=\\\"custom-btn\\\" (click)=\\\"intiateTalentMangement()\\\">\\n                                    {{talentIntiateBtn}}\\n                                </button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"sidenav-sucess-flag animate__animated\\\"\\n                            [ngClass]=\\\"{'animate__fadeInRightBig':intiateSucess}\\\">\\n                            <div class=\\\"notify-sec\\\">\\n                                <img src=\\\"../../../../assets/images/notify.jpeg\\\">\\n                                <p>Talent assessment is initated and sent</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"sidenav-container\\\" style=\\\"width: 689px;\\\" *ngIf=\\\"checkActiveTm\\\">\\n                        <div class=\\\"sidenav-heading\\\">\\n                            <span class=\\\"title\\\">Start People Assessment</span>\\n                            <span class=\\\"flex-1\\\"></span>\\n                            <mat-icon (click)=\\\"closeSidenav()\\\">close</mat-icon>\\n                        </div>\\n                        <div class=\\\"sidenav-sucess-flag\\\">\\n                            <div class=\\\"notify-sec active-flag-msg\\\">\\n                                <p>{{checkActiveTm}}</p>\\n                            </div>\\n                        </div>\\n                        </div>\\n\\n\\n                </mat-drawer>\\n\\n                <mat-drawer #dueSidenav mode=\\\"over\\\" position=\\\"end\\\">\\n                    <div class=\\\"sidenav-container\\\" style=\\\"width: 361px;\\\">\\n                        <div class=\\\"sidenav-heading\\\">\\n                            <span class=\\\"title\\\">People Assessment Due Names ({{ dueEmpList?.length }})</span>\\n                            <span class=\\\"flex-1\\\"></span>\\n                            <mat-icon (click)=\\\"closeDueSidenav()\\\">close</mat-icon>\\n                        </div>\\n                        <div class=\\\"sidenav-content due-list\\\">\\n                            <div class=\\\"due-row\\\" *ngFor=\\\"let emp of dueEmpList\\\">\\n                                <div class=\\\"emp-icon\\\">\\n                                    <span>\\n                                        {{emp.fullname ? emp?.fullname?.substring(0,2) : ''}}\\n                                    </span>\\n                                </div>\\n                                <div class=\\\"emp-desc\\\">\\n                                    <span class=\\\"name\\\">{{ emp.fullname }}</span>\\n                                    <span class=\\\"mail\\\">{{ emp.email }}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </mat-drawer>\\n            </mat-drawer-container>\\n        </mat-step>\\n\\n    </mat-horizontal-stepper>\\n</div>\\n\"","export default \"<div class=\\\"inner-page with-drawer\\\">\\n    <mat-horizontal-stepper #stepper class=\\\"no-indications\\\">\\n        <mat-step *ngIf=\\\"!loader && !dataSource?.data?.length\\\">\\n            <div class=\\\"intial-view\\\">\\n                <div class=\\\"page-heading\\\">\\n                    <h3 class=\\\"heading\\\">Talent Manager</h3>\\n                </div>\\n                <div class=\\\"view-body\\\">\\n                    <img src=\\\"../../../../assets/images/tm-icon.svg\\\"/>\\n                    <p>This is where you initiate Talent Manager Reviews</p>\\n                    <button class=\\\"custom-btn\\\" matStepperNext>INTIATE</button>\\n                </div>\\n            </div>\\n        </mat-step>\\n        <mat-step>\\n            <mat-drawer-container class=\\\"drawer-container\\\" [hasBackdrop]=\\\"true\\\">\\n                <mat-drawer-content class=\\\"drawer-sidenav-content\\\">\\n                    <div class=\\\"page-heading\\\">\\n                        <h3 class=\\\"heading\\\">Talent Manager</h3>\\n                        <!-- (click)=\\\"openUserSidenav(true)\\\" -->\\n                        <button mat-button class=\\\"custom-btn\\\" (click)=\\\"StartNewTalent();\\\">\\n                            Start new\\n                        </button>\\n                    </div>\\n                    <ng-container *ngIf=\\\"!loader && dataSource?.data?.length\\\">\\n                        <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\" matSort>\\n                            <!-- Position Column -->\\n                            <ng-container matColumnDef=\\\"sNo\\\">\\n                                <th mat-header-cell *matHeaderCellDef >S.no</th>\\n                                <td mat-cell *matCellDef=\\\"let element; let i = index\\\">{{ i + 1 }}</td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"start\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">Start</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.start | date: \\\"dd/LLL/yyy\\\" }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <!-- Weight Column -->\\n                            <ng-container matColumnDef=\\\"end\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">End</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.end | date: \\\"dd/LLL/yyy\\\" }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <!-- Symbol Column -->\\n                            <ng-container matColumnDef=\\\"sent\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">Sent to</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.sent }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"submited\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"text-center\\\">\\n                                    Submited by\\n                                </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\">\\n                                    {{ element.submited }}\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"dueEmp\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Due</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <span class=\\\"due-cell\\\" (click)=\\\"getDueList(element)\\\">{{\\n              element.dueEmp\\n            }}</span>\\n                                </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"status\\\">\\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\">\\n                                    <div class=\\\"s-{{ element?.status }}\\\">\\n                                        <mat-form-field class=\\\"custom-input status-field\\\">\\n                                            <mat-select [(ngModel)]=\\\"element.status\\\"\\n                                                (selectionChange)=\\\"onStatusChange(element)\\\">\\n                                                <mat-option *ngFor=\\\"let status of statusList\\\" [value]=\\\"status.id\\\">\\n                                                    {{ status.name}}\\n                                                </mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n                                    </div>\\n                                </td>\\n                            </ng-container>\\n\\n                            <ng-container matColumnDef=\\\"edit\\\">\\n                                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">Edit</th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"reminder-cell text-center\\\">\\n                                    <mat-icon (click)=\\\"onEdit(element)\\\"\\n                                        [ngClass]=\\\"{'disable-click':element.status != '1'}\\\">edit\\n                                    </mat-icon>\\n                                </td>\\n                            </ng-container>\\n                            <ng-container matColumnDef=\\\"reminder\\\">\\n                                <th mat-header-cell *matHeaderCellDef class=\\\"text-center\\\">\\n                                    Reminder\\n                                </th>\\n                                <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"reminder-cell text-center\\\">\\n                                    <mat-icon (click)=\\\"onReminder(element)\\\"\\n                                        [ngClass]=\\\"{'disable-click':element.status != '1'}\\\">\\n                                        notifications_none\\n                                    </mat-icon>\\n                                </td>\\n                            </ng-container>\\n\\n                            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n                        </table>\\n                        <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator> -->\\n                        <div class=\\\"custom-pagination\\\">\\n                            <ngb-pagination [(page)]=\\\"pageDetails.page\\\" [pageSize]=\\\"pageDetails.pageSize\\\"\\n                                [collectionSize]=\\\"pageDetails.total\\\" (pageChange)=\\\"pageChange()\\\"></ngb-pagination>\\n                            <mat-form-field class=\\\"custom-input status-field\\\">\\n                                <mat-select [(value)]=\\\"pageDetails.pageSize\\\" (valueChange)=\\\"pageItemsChange()\\\">\\n                                    <mat-option [value]=\\\"5\\\">5 / page</mat-option>\\n                                    <mat-option [value]=\\\"10\\\">10 / page</mat-option>\\n                                    <mat-option [value]=\\\"20\\\">20 / page</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n\\n                    </ng-container>\\n                    <p class=\\\"no-data loader\\\" *ngIf=\\\"loader\\\">\\n                        <mat-spinner></mat-spinner>\\n                    </p>\\n                    <ng-container *ngIf=\\\"!loader && !dataSource?.data?.length\\\">\\n                        <p class=\\\"no-data\\\">This is where you initiate Talent Manager Reviews</p>\\n                    </ng-container>\\n                </mat-drawer-content>\\n\\n                <mat-drawer #drawer mode=\\\"over\\\" position=\\\"end\\\">\\n                    <div class=\\\"sidenav-container\\\" style=\\\"width: 689px;\\\" *ngIf=\\\"!checkActiveTm\\\">\\n                        <div class=\\\"sidenav-heading\\\">\\n                            <span class=\\\"title\\\">Start Talent Manager</span>\\n                            <span class=\\\"flex-1\\\"></span>\\n                            <mat-icon (click)=\\\"closeSidenav()\\\">close</mat-icon>\\n                        </div>\\n                        <div class=\\\"sidenav-body animate__animated \\\" \\n                        [ngClass]=\\\"{'animate__fadeOut':intiateSucess}\\\">\\n                            <div class=\\\"sidenav-content\\\">\\n                                <div class=\\\"d-flex flex-column\\\" *ngIf=\\\"!sideNavLoader\\\">\\n                                    <h5 class=\\\"heading\\\">Employee List</h5>\\n                                    <div class=\\\"d-flex\\\">\\n                                        <div class=\\\"custom-field\\\">\\n                                            <label>Select by Grade</label>\\n                                            <!--  -->\\n                                            <mat-form-field class=\\\"custom-input\\\" appearance=\\\"none\\\">\\n                                                <mat-select multiple placeholder=\\\"Select Grade\\\" [formControl]=\\\"grades\\\" (selectionChange)=\\\"onGradesChages($event)\\\">\\n                                                  <mat-select-trigger>\\n                                                    {{getDisplayName()}}\\n                                                  </mat-select-trigger>\\n                                                  <mat-option #allSelected\\n                                                        (click)=\\\"isSelectAllClicked=true;\\\" [value]=\\\"0\\\"\\n                                                        [disabled]=\\\"disableSelectAll\\\">Select\\n                                                        All</mat-option>\\n                                                    <mat-option *ngFor=\\\"let grade of gradesList\\\" [value]=\\\"grade\\\"\\n                                                        [disabled]=\\\"checkDisable(grade['_id'])\\\"\\n                                                       >\\n                                                        {{ grade.gradeName }}\\n                                                    </mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"custom-field date-field\\\">\\n                                            <label>Start Date</label>\\n                                            <mat-form-field class=\\\"custom-input\\\" appearance=\\\"none\\\">\\n                                                <input matInput [matDatepicker]=\\\"picker\\\" [max]=\\\"endDate.value\\\"\\n                                                    [formControl]=\\\"startDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\n                                                    (click)=\\\"picker.open()\\\" />\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                                <mat-datepicker #picker></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"custom-field date-field\\\">\\n                                            <label>End Date</label>\\n                                            <mat-form-field class=\\\"custom-input\\\" appearance=\\\"none\\\">\\n                                                <input matInput [matDatepicker]=\\\"picker1\\\" [min]=\\\"startDate.value\\\"\\n                                                    [formControl]=\\\"endDate\\\" placeholder=\\\"DD/MM/YYYY\\\"\\n                                                    (click)=\\\"picker1.open()\\\" />\\n                                                <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\">\\n                                                </mat-datepicker-toggle>\\n                                                <mat-datepicker #picker1></mat-datepicker>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"filter-check\\\" *ngIf=\\\"userInfo?.data?.user?.role == 1\\\">\\n                                        <mat-checkbox [(ngModel)]=\\\"onlySupervisors\\\"\\n                                            (change)=\\\"onCheckSupervisors(onlySupervisors)\\\">Only Supervisors\\n                                        </mat-checkbox>\\n                                    </div>\\n                                    <div class=\\\"emp-list\\\" *ngIf=\\\"empList?.length\\\">\\n                                        <table>\\n                                            <thead>\\n                                                <th>Employee name</th>\\n                                                <th>Employee Id</th>\\n                                            </thead>\\n                                            <tbody>\\n                                                <tr *ngFor=\\\"let emp of empList\\\">\\n                                                    <td>\\n                                                        <span>{{ emp.fullname }}</span>\\n                                                    </td>\\n                                                    <td>\\n                                                        <span>{{ emp.empId }}</span>\\n                                                    </td>\\n                                                </tr>\\n                                            </tbody>\\n                                        </table>\\n                                    </div>\\n                                </div>\\n                                <p class=\\\"no-data loader sideNav-loader\\\" *ngIf=\\\"sideNavLoader\\\">\\n                                    <mat-spinner></mat-spinner>\\n                                </p>\\n                            </div>\\n                            <div class=\\\"sidenav-footer\\\">\\n                                <button mat-button class=\\\"custom-btn\\\" (click)=\\\"intiateTalentMangement()\\\">\\n                                    {{talentIntiateBtn}}\\n                                </button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"sidenav-sucess-flag animate__animated\\\"\\n                            [ngClass]=\\\"{'animate__fadeInRightBig':intiateSucess}\\\">\\n                            <div class=\\\"notify-sec\\\">\\n                                <img src=\\\"../../../../assets/images/notify.jpeg\\\">\\n                                <p>Talent assessment is initated and sent</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"sidenav-container\\\" style=\\\"width: 689px;\\\" *ngIf=\\\"checkActiveTm\\\">\\n                        <div class=\\\"sidenav-heading\\\">\\n                            <span class=\\\"title\\\">Start Talent Manager</span>\\n                            <span class=\\\"flex-1\\\"></span>\\n                            <mat-icon (click)=\\\"closeSidenav()\\\">close</mat-icon>\\n                        </div>\\n                        <div class=\\\"sidenav-sucess-flag\\\">\\n                            <div class=\\\"notify-sec active-flag-msg\\\">\\n                                <p>{{checkActiveTm}}</p>\\n                            </div>\\n                        </div>\\n                        </div>\\n\\n\\n                </mat-drawer>\\n\\n                <mat-drawer #dueSidenav mode=\\\"over\\\" position=\\\"end\\\">\\n                    <div class=\\\"sidenav-container\\\" style=\\\"width: 361px;\\\">\\n                        <div class=\\\"sidenav-heading\\\">\\n                            <span class=\\\"title\\\">Talent Manager Due Names ({{ dueEmpList?.length }})</span>\\n                            <span class=\\\"flex-1\\\"></span>\\n                            <mat-icon (click)=\\\"closeDueSidenav()\\\">close</mat-icon>\\n                        </div>\\n                        <div class=\\\"sidenav-content due-list\\\">\\n                            <div class=\\\"due-row\\\" *ngFor=\\\"let emp of dueEmpList\\\">\\n                                <div class=\\\"emp-icon\\\">\\n                                    <span>\\n                                        {{emp.fullname ? emp?.fullname?.substring(0,2) : ''}}\\n                                    </span>\\n                                </div>\\n                                <div class=\\\"emp-desc\\\">\\n                                    <span class=\\\"name\\\">{{ emp.fullname }}</span>\\n                                    <span class=\\\"mail\\\">{{ emp.email }}</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </mat-drawer>\\n            </mat-drawer-container>\\n        </mat-step>\\n\\n    </mat-horizontal-stepper>\\n</div>\\n\"","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, retry } from 'rxjs/operators';\nimport { throwError, Observable } from 'rxjs';  \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HrService {\n  private baseUrl = environment.baseUrl\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getGradeList():Observable<any> {\n    let path = this.baseUrl + 'getGrades'\n    return this.http.post<any>(path, '')\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getEmployeeList(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getTalentGradeEmployees'\n    return this.http.post<any>(path, body)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  \n  getSaveTalentManagerIntiate(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getSaveTalentManager'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getDueTalentSurveyEmployees(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getDueTalentSurveyEmployees'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  } \n  getUpdateTalentSurveyStatus(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getUpdateTalentSurveyStatus'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  } \n  getTalentSurveys(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getTalentSurveys'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getRemindTalentDueEmployees(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getRemindTalentDueEmployees'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n  getCheckActiveStatusReviews(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getCheckActiveStatusReviews'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n\n  getEditTalentSurveyById(body):Observable<any> {\n    let path = this.baseUrl + 'talent/getEditTalentSurveyById'\n    return this.http.post<any>(path, body)\n    .pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  \n  \n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage)\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL29yZy13aW4vZ29hbC1tYW5hZ2VtZW50L2dvYWwtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-goal-management',\n  templateUrl: './goal-management.component.html',\n  styleUrls: ['./goal-management.component.scss']\n})\nexport class GoalManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TalentManagementComponent } from './talent-management/talent-management.component';\nimport { OrgWinComponent } from './org-win/org-win.component';\nimport { PeopleAssessmentComponent } from './people-assessment/people-assessment.component';\n\n\nconst routes: Routes = [\n  {\n    path:'',\n    component:OrgWinComponent,\n    children:[\n      {\n        path:'talentMangement',\n        component:TalentManagementComponent\n      },\n      {\n        path:'peopleAssessment',\n        component:PeopleAssessmentComponent\n      },\n      \n    ]\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OrgWINRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OrgWINRoutingModule } from './org-win-routing.module';\nimport { TalentManagementComponent } from './talent-management/talent-management.component';\nimport { OrgWinComponent } from './org-win/org-win.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { PeopleAssessmentComponent } from './people-assessment/people-assessment.component';\nimport { GoalManagementComponent } from './goal-management/goal-management.component';\n\n\n@NgModule({\n  declarations: [TalentManagementComponent, OrgWinComponent, PeopleAssessmentComponent, GoalManagementComponent],\n  imports: [\n    CommonModule,\n    OrgWINRoutingModule,\n    SharedModule\n  ]\n})\nexport class OrgWINModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL29yZy13aW4vb3JnLXdpbi9vcmctd2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-org-win',\n  templateUrl: './org-win.component.html',\n  styleUrls: ['./org-win.component.scss']\n})\nexport class OrgWinComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL29yZy13aW4vcGVvcGxlLWFzc2Vzc21lbnQvcGVvcGxlLWFzc2Vzc21lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  MatTableDataSource,\n  MatPaginator,\n  MatSidenav,\n  MatSort,\n  MatOption,\n} from \"@angular/material\";\nimport { HrService } from \"../../hr.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../authentication/auth.service\";\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'app-people-assessment',\n  templateUrl: './people-assessment.component.html',\n  styleUrls: ['./people-assessment.component.scss']\n})\nexport class PeopleAssessmentComponent implements OnInit {\n  @ViewChild(\"drawer\", { static: true }) public sidenav: MatSidenav;\n  @ViewChild(\"dueSidenav\", { static: true }) public dueSidenav: MatSidenav;\n  sideNavLoader: boolean = false;\n  talentIntiateBtn: string = \"INTIATE\";\n  talentID: any = \"\";\n  checkActiveTm:string = '';\n  displayedColumns: string[] = [\n    \"sNo\",\n    \"start\",\n    \"end\",\n    \"sent\",\n    \"submited\",\n    \"dueEmp\",\n    \"status\",\n    \"edit\",\n    \"reminder\",\n  ];\n  loader: boolean = true;\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(\"allSelected\", { static: false }) private allSelected: MatOption;\n  gradesList: Array<any> = [];\n  empList: Array<any> = [];\n  dueEmpList: Array<any> = [];\n  intiateTalent: any;\n  gradesInfoRef = [];\n  // selectedGrades: Array<any> = [];\n  statusList: Array<any> = [\n    {\n      id: \"1\",\n      name: \"Active\",\n    },\n    {\n      id: \"2\",\n      name: \"Inactive\",\n    },\n    {\n      id: \"3\",\n      name: \"Completed\",\n    },\n  ];\n  grades = new FormControl();\n  startDate = new FormControl();\n  endDate = new FormControl();\n  onlySupervisors: boolean = false;\n  pageDetails = {\n    page: 1,\n    pageSize: 5,\n    total: 0,\n    sort: { start: 1 } as any,\n  };\n  intiateSucess: boolean = false;\n  disableSelectAll: boolean = false;\n  userInfo: any;\n  isSelectAllClicked;\n  stopChangeEvent;\n  timeOutRef;\n  constructor(private _service: HrService, private auth: AuthService) {}\n\n  ngOnInit() {\n    this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    this.getGradeList();\n    this.getTalentSurveysData(true);\n  }\n\n  getTalentSurveysData(isFirst?) {\n    const params = _.cloneDeep(this.pageDetails);\n    params.page--;\n\n    this._service.getTalentSurveys(params).subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          console.log(res.data, \"dataaa\");\n          this.dataSource.data = res.data.talents;\n          this.loader = false;\n          // this.dataSource.paginator = this.paginator;\n          this.pageDetails.total = res.data.TotalCount;\n          if (isFirst) {\n            setTimeout(() => {\n              this.dataSource.sort = this.sort;\n              this.onSortChange();\n            }, 200);\n          }\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  onSortChange() {\n    if (this.sort && this.sort.sortChange) {\n      this.sort.sortChange.subscribe((r) => {\n        console.log(r);\n        this.pageDetails.page = 1;\n        const value = r.direction == \"asc\" ? 1 : -1;\n        this.pageDetails.sort = { [r.active]: value };\n        this.getTalentSurveysData();\n     });\n    }\n  }\n  getGradeList() {\n    this._service.getGradeList().subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          console.log(res);\n          this.gradesInfoRef = res.data;\n          this.gradesInfoRef.splice(0, 1);\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  tosslePerOne(all) {\n    if (this.allSelected.selected) {\n      this.allSelected.deselect();\n      return false;\n    }\n    if (this.grades.value.length == this.gradesList.length) {\n      this.isSelectAllClicked = true;\n      this.allSelected.select();\n    } else {\n      this.getEmployeeList(this.grades.value);\n    }\n  }\n  toggleAllSelection() {\n    const isSelected = this.gradesList.some((item) =>\n      this.checkDisable(item[\"_id\"])\n    );\n    if (this.allSelected.selected) {\n      this.grades.patchValue([...this.gradesList.map((item) => item), 0], {\n        emitEvent: false,\n      });\n      this.getEmployeeList(this.grades.value);\n    } else {\n      if (isSelected) {\n        const list = this.gradesList.filter((item) =>\n          this.checkDisable(item[\"_id\"])\n        );\n        this.grades.patchValue(list, { emitEvent: false });\n      } else {\n        this.grades.patchValue([], { emitEvent: false });\n      }\n      this.getEmployeeList(this.grades.value);\n    }\n  }\n\n  onGradesChages(event) {\n    clearTimeout(this.timeOutRef);\n    this.timeOutRef = setTimeout(() => {\n      if (this.isSelectAllClicked) {\n        this.toggleAllSelection();\n        this.isSelectAllClicked = false;\n      } else {\n        this.tosslePerOne(this.allSelected.viewValue);\n      }\n    }, 100);\n  }\n\n  onCheckSupervisors(onlySupervisors) {\n    //this.onlySupervisors = !onlySupervisors;\n    this.getEmployeeList(this.grades.value);\n  }\n  getEmployeeList(params) {\n    let selectedGrades = {\n      gradeIds: params ? params.map((g) => g._id) : [],\n    };\n    selectedGrades[\"showSupervisors\"] = this.onlySupervisors;\n    if (!selectedGrades.gradeIds.length) {\n      this.empList = [];\n      return;\n    }\n    this._service.getEmployeeList(selectedGrades).subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          console.log(res);\n          this.empList = res.data;\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  intiateTalentMangement() {\n    let msg = \"\";\n    this.sideNavLoader = true;\n    const grades = this.grades.value.filter((g) => (typeof g === 'object')).map(g => g._id);\n    this.intiateTalent = {\n      gradeIds: grades,\n      startsurvey: this.startDate.value,\n      endsurvey: this.endDate.value,\n      employees: this.empList.map((e) => {\n        return {\n          empId: e._id,\n        };\n      }),\n    };\n    if (this.talentID){\n      this.intiateTalent[\"talentID\"] = this.talentID;\n   }\n    if (!this.grades.value && !this.startDate.value && !this.endDate.value) {\n      msg = \"Please select Grade & Date\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    } else if (!this.grades.value) {\n      msg = \"Please select Grade\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    } else if (!this.startDate.value) {\n      msg = \"Please select Start Date\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    } else if (!this.endDate.value) {\n      msg = \"Please select End Date\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    }\n    this._service.getSaveTalentManagerIntiate(this.intiateTalent).subscribe(\n      (res) => {\n        if (res) {\n          this.sideNavLoader = false;\n          let msg = res.msg ? res.msg : \"Something went wrong\";\n          //this.auth.openConfirmDialog(msg, \"error\");\n          this.intiateSucess = true;\n          setTimeout(() => {\n            this.getTalentSurveysData();\n          },1000);\n          setTimeout(() => {\n            this.closeSidenav();\n            this.intiateSucess = false;\n          }, 2000);\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  getDueList(row) {\n    this._service\n      .getDueTalentSurveyEmployees({\n        talentID: row.id,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res);\n          if (res && res.data) {\n            this.dueEmpList = res.data;\n            this.openDueSidenav();\n          }\n        },\n        (err) => {\n          console.log(\"HTTP Error\", err);\n        }\n      );\n  }\n\n  onStatusChange(row) {\n    let param = { talentID: row.id, status: row.status };\n    this._service.getUpdateTalentSurveyStatus(param).subscribe(\n      (res) => {\n        //console.log(res);\n        if (res) {\n          this.auth.openConfirmDialog(res.msg, \"error\", \"autoClose\");\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  onReminder(row?) {\n    if (row.status != \"1\") return;\n    let msg = \"Are you sure you want to send reminder\";\n    let cb = () => {\n      this._service\n        .getRemindTalentDueEmployees({\n          talentID: row.id,\n        })\n        .subscribe(\n          (res) => {\n            if (res) {\n              this.auth.openConfirmDialog(res.msg, \"error\", \"autoClose\");\n            }\n          },\n          (err) => {\n            console.log(\"HTTP Error\", err);\n          }\n        );\n    };\n    this.auth.openConfirmDialog(msg, \"reminder\", \"\", cb);\n  }\n\n  onEdit(row) {\n    if (row.status != \"1\") return;\n    this.talentIntiateBtn = \"UPDATE\";\n    this._service.getEditTalentSurveyById({ id: row.id }).subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          this.empList = res.data.empinfo;\n          this.gradesList = _.cloneDeep(res.data.gradesInfo);\n          const ids = res.data.gradesInfo.map((x) => x._id);\n          const ref = _.cloneDeep(this.gradesInfoRef);\n          ref.map((each) => {\n            if (!ids.includes(each._id)) {\n              this.gradesList.push(each);\n            }\n          });\n          this.talentID = row.id;\n          const list =  [];\n          res.data.gradesInfo.map((each) => {\n            const obj = _.find(this.gradesList, [\"_id\", each._id]);\n            if (obj) {\n              list.push(obj);\n            }\n          });\n          this.disableSelectAll = this.gradesList.every((x) => x[\"select\"]);\n          if (this.disableSelectAll) {\n            list.push(0);\n          }\n          this.grades.setValue(list);\n          this.startDate.setValue(res.data.startsurvey);\n          this.endDate.setValue(res.data.endsurvey);\n          this.openUserSidenav();\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n  // getShortName(str){\n  //   return str.split('').map(n => n[0].join(''));\n  // }\n  openUserSidenav(create?) {\n    this.sidenav.open();\n    if (create == true) {\n      this.talentID = \"\";\n      this.gradesList = _.cloneDeep(this.gradesInfoRef);\n      this.disableSelectAll = false;\n    }\n  }\n  closeSidenav() {\n    this.empList = [];\n    this.startDate.setValue(null);\n    this.endDate.setValue(null);\n    this.grades.setValue(null);\n    this.checkActiveTm = \"\";\n    this.sidenav.close();\n  }\n  openDueSidenav() {\n    this.dueSidenav.open();\n  }\n  closeDueSidenav() {\n    this.dueSidenav.close();\n  }\n\n  pageChange() {\n    // this.dataSource.data = this.totalData.slice(\n    //   this.pageDetails.page * this.pageDetails.pageSize - this.pageDetails.pageSize,\n    //   this.pageDetails.page * this.pageDetails.pageSize\n    // );\n    this.getTalentSurveysData();\n  }\n\n  pageItemsChange() {\n    this.pageDetails.page = 1;\n    this.getTalentSurveysData();\n  }\n\n  checkDisable(value) {\n    if (this.gradesList.length) {\n      const obj = _.find(this.gradesList, [\"_id\", value]);\n      return obj && obj[\"select\"];\n    }\n    return false;\n  }\n\n  StartNewTalent() {\n    this._service\n      .getCheckActiveStatusReviews({ status: \"1\" })\n      .subscribe((res) => {\n        console.log(res, \"check active api res\");\n        if (res && res.success) {\n          this.checkActiveTm = \"\";\n          this.openUserSidenav(true);\n        } else {\n          this.checkActiveTm = res.msg;\n          this.openUserSidenav(true);\n          setTimeout(() => {\n            this.closeSidenav();\n\n          }, 3000);\n          // this.auth.openConfirmDialog(res.msg, \"error\", \"autoClose\");\n        }\n      });\n  }\n  getDisplayName() {\n    const list = [];\n    if (this.grades.value) {\n      this.grades.value.map((each) => {\n        if (typeof each == \"object\") {\n          list.push(each.gradeName);\n        }\n      });\n    }\n    return list.toString();\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hyL29yZy13aW4vdGFsZW50LW1hbmFnZW1lbnQvdGFsZW50LW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  MatTableDataSource,\n  MatPaginator,\n  MatSidenav,\n  MatSort,\n  MatOption,\n} from \"@angular/material\";\nimport { HrService } from \"../../hr.service\";\nimport { FormControl } from \"@angular/forms\";\nimport { AuthService } from \"../../../authentication/auth.service\";\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: \"app-talent-management\",\n  templateUrl: \"./talent-management.component.html\",\n  styleUrls: [\"./talent-management.component.scss\"],\n})\nexport class TalentManagementComponent implements OnInit {\n  @ViewChild(\"drawer\", { static: true }) public sidenav: MatSidenav;\n  @ViewChild(\"dueSidenav\", { static: true }) public dueSidenav: MatSidenav;\n  sideNavLoader: boolean = false;\n  talentIntiateBtn: string = \"INTIATE\";\n  talentID: any = \"\";\n  checkActiveTm:string = '';\n  displayedColumns: string[] = [\n    \"sNo\",\n    \"start\",\n    \"end\",\n    \"sent\",\n    \"submited\",\n    \"dueEmp\",\n    \"status\",\n    \"edit\",\n    \"reminder\",\n  ];\n  loader: boolean = true;\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(\"allSelected\", { static: false }) private allSelected: MatOption;\n  gradesList: Array<any> = [];\n  empList: Array<any> = [];\n  dueEmpList: Array<any> = [];\n  intiateTalent: any;\n  gradesInfoRef = [];\n  // selectedGrades: Array<any> = [];\n  statusList: Array<any> = [\n    {\n      id: \"1\",\n      name: \"Active\",\n    },\n    {\n      id: \"2\",\n      name: \"Inactive\",\n    },\n    {\n      id: \"3\",\n      name: \"Completed\",\n    },\n  ];\n  grades = new FormControl();\n  startDate = new FormControl();\n  endDate = new FormControl();\n  onlySupervisors: boolean = false;\n  pageDetails = {\n    page: 1,\n    pageSize: 5,\n    total: 0,\n    sort: { start: 1 } as any,\n  };\n  intiateSucess: boolean = false;\n  disableSelectAll: boolean = false;\n  userInfo: any;\n  isSelectAllClicked;\n  stopChangeEvent;\n  timeOutRef;\n  constructor(private _service: HrService, private auth: AuthService) {}\n\n  ngOnInit() {\n    this.userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    this.getGradeList();\n    this.getTalentSurveysData(true);\n  }\n\n  getTalentSurveysData(isFirst?) {\n    const params = _.cloneDeep(this.pageDetails);\n    params.page--;\n\n    this._service.getTalentSurveys(params).subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          console.log(res.data, \"dataaa\");\n          this.dataSource.data = res.data.talents;\n          this.loader = false;\n          // this.dataSource.paginator = this.paginator;\n          this.pageDetails.total = res.data.TotalCount;\n          if (isFirst) {\n            setTimeout(() => {\n              this.dataSource.sort = this.sort;\n              this.onSortChange();\n            }, 200);\n          }\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  onSortChange() {\n    if (this.sort && this.sort.sortChange) {\n      this.sort.sortChange.subscribe((r) => {\n        console.log(r);\n        this.pageDetails.page = 1;\n        const value = r.direction == \"asc\" ? 1 : -1;\n        this.pageDetails.sort = { [r.active]: value };\n        this.getTalentSurveysData();\n     });\n    }\n  }\n  getGradeList() {\n    this._service.getGradeList().subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          console.log(res);\n          this.gradesInfoRef = res.data;\n          this.gradesInfoRef.splice(0, 1);\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  tosslePerOne(all) {\n    if (this.allSelected.selected) {\n      this.allSelected.deselect();\n      return false;\n    }\n    if (this.grades.value.length == this.gradesList.length) {\n      this.isSelectAllClicked = true;\n      this.allSelected.select();\n    } else {\n      this.getEmployeeList(this.grades.value);\n    }\n  }\n  toggleAllSelection() {\n    const isSelected = this.gradesList.some((item) =>\n      this.checkDisable(item[\"_id\"])\n    );\n    if (this.allSelected.selected) {\n      this.grades.patchValue([...this.gradesList.map((item) => item), 0], {\n        emitEvent: false,\n      });\n      this.getEmployeeList(this.grades.value);\n    } else {\n      if (isSelected) {\n        const list = this.gradesList.filter((item) =>\n          this.checkDisable(item[\"_id\"])\n        );\n        this.grades.patchValue(list, { emitEvent: false });\n      } else {\n        this.grades.patchValue([], { emitEvent: false });\n      }\n      this.getEmployeeList(this.grades.value);\n    }\n  }\n\n  onGradesChages(event) {\n    clearTimeout(this.timeOutRef);\n    this.timeOutRef = setTimeout(() => {\n      if (this.isSelectAllClicked) {\n        this.toggleAllSelection();\n        this.isSelectAllClicked = false;\n      } else {\n        this.tosslePerOne(this.allSelected.viewValue);\n      }\n    }, 100);\n  }\n\n  onCheckSupervisors(onlySupervisors) {\n    //this.onlySupervisors = !onlySupervisors;\n    this.getEmployeeList(this.grades.value);\n  }\n  getEmployeeList(params) {\n    let selectedGrades = {\n      gradeIds: params ? params.map((g) => g._id) : [],\n    };\n    selectedGrades[\"showSupervisors\"] = this.onlySupervisors;\n    if (!selectedGrades.gradeIds.length) {\n      this.empList = [];\n      return;\n    }\n    this._service.getEmployeeList(selectedGrades).subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          console.log(res);\n          this.empList = res.data;\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  intiateTalentMangement() {\n    let msg = \"\";\n    this.sideNavLoader = true;\n    const grades = this.grades.value.filter((g) => (typeof g === 'object')).map(g => g._id);\n    this.intiateTalent = {\n      gradeIds: grades,\n      startsurvey: this.startDate.value,\n      endsurvey: this.endDate.value,\n      employees: this.empList.map((e) => {\n        return {\n          empId: e._id,\n        };\n      }),\n    };\n    if (this.talentID){\n      this.intiateTalent[\"talentID\"] = this.talentID;\n   }\n    if (!this.grades.value && !this.startDate.value && !this.endDate.value) {\n      msg = \"Please select Grade & Date\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    } else if (!this.grades.value) {\n      msg = \"Please select Grade\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    } else if (!this.startDate.value) {\n      msg = \"Please select Start Date\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    } else if (!this.endDate.value) {\n      msg = \"Please select End Date\";\n      this.auth.openConfirmDialog(msg, \"error\");\n      return;\n    }\n    this._service.getSaveTalentManagerIntiate(this.intiateTalent).subscribe(\n      (res) => {\n        if (res) {\n          this.sideNavLoader = false;\n          let msg = res.msg ? res.msg : \"Something went wrong\";\n          //this.auth.openConfirmDialog(msg, \"error\");\n          this.intiateSucess = true;\n          setTimeout(() => {\n            this.getTalentSurveysData();\n          },1000);\n          setTimeout(() => {\n            this.closeSidenav();\n            this.intiateSucess = false;\n          }, 2000);\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  getDueList(row) {\n    this._service\n      .getDueTalentSurveyEmployees({\n        talentID: row.id,\n      })\n      .subscribe(\n        (res) => {\n          console.log(res);\n          if (res && res.data) {\n            this.dueEmpList = res.data;\n            this.openDueSidenav();\n          }\n        },\n        (err) => {\n          console.log(\"HTTP Error\", err);\n        }\n      );\n  }\n\n  onStatusChange(row) {\n    let param = { talentID: row.id, status: row.status };\n    this._service.getUpdateTalentSurveyStatus(param).subscribe(\n      (res) => {\n        //console.log(res);\n        if (res) {\n          this.auth.openConfirmDialog(res.msg, \"error\", \"autoClose\");\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n\n  onReminder(row?) {\n    if (row.status != \"1\") return;\n    let msg = \"Are you sure you want to send reminder\";\n    let cb = () => {\n      this._service\n        .getRemindTalentDueEmployees({\n          talentID: row.id,\n        })\n        .subscribe(\n          (res) => {\n            if (res) {\n              this.auth.openConfirmDialog(res.msg, \"error\", \"autoClose\");\n            }\n          },\n          (err) => {\n            console.log(\"HTTP Error\", err);\n          }\n        );\n    };\n    this.auth.openConfirmDialog(msg, \"reminder\", \"\", cb);\n  }\n\n  onEdit(row) {\n    if (row.status != \"1\") return;\n    this.talentIntiateBtn = \"UPDATE\";\n    this._service.getEditTalentSurveyById({ id: row.id }).subscribe(\n      (res) => {\n        console.log(res);\n        if (res && res.data) {\n          this.empList = res.data.empinfo;\n          this.gradesList = _.cloneDeep(res.data.gradesInfo);\n          const ids = res.data.gradesInfo.map((x) => x._id);\n          const ref = _.cloneDeep(this.gradesInfoRef);\n          ref.map((each) => {\n            if (!ids.includes(each._id)) {\n              this.gradesList.push(each);\n            }\n          });\n          this.talentID = row.id;\n          const list =  [];\n          res.data.gradesInfo.map((each) => {\n            const obj = _.find(this.gradesList, [\"_id\", each._id]);\n            if (obj) {\n              list.push(obj);\n            }\n          });\n          this.disableSelectAll = this.gradesList.every((x) => x[\"select\"]);\n          if (this.disableSelectAll) {\n            list.push(0);\n          }\n          this.grades.setValue(list);\n          this.startDate.setValue(res.data.startsurvey);\n          this.endDate.setValue(res.data.endsurvey);\n          this.openUserSidenav();\n        }\n      },\n      (err) => {\n        console.log(\"HTTP Error\", err);\n      }\n    );\n  }\n  // getShortName(str){\n  //   return str.split('').map(n => n[0].join(''));\n  // }\n  openUserSidenav(create?) {\n    this.sidenav.open();\n    if (create == true) {\n      this.talentID = \"\";\n      this.gradesList = _.cloneDeep(this.gradesInfoRef);\n      this.disableSelectAll = false;\n    }\n  }\n  closeSidenav() {\n    this.empList = [];\n    this.startDate.setValue(null);\n    this.endDate.setValue(null);\n    this.grades.setValue(null);\n    this.checkActiveTm = \"\";\n    this.sidenav.close();\n  }\n  openDueSidenav() {\n    this.dueSidenav.open();\n  }\n  closeDueSidenav() {\n    this.dueSidenav.close();\n  }\n\n  pageChange() {\n    // this.dataSource.data = this.totalData.slice(\n    //   this.pageDetails.page * this.pageDetails.pageSize - this.pageDetails.pageSize,\n    //   this.pageDetails.page * this.pageDetails.pageSize\n    // );\n    this.getTalentSurveysData();\n  }\n\n  pageItemsChange() {\n    this.pageDetails.page = 1;\n    this.getTalentSurveysData();\n  }\n\n  checkDisable(value) {\n    if (this.gradesList.length) {\n      const obj = _.find(this.gradesList, [\"_id\", value]);\n      return obj && obj[\"select\"];\n    }\n    return false;\n  }\n\n  StartNewTalent() {\n    this._service\n      .getCheckActiveStatusReviews({ status: \"1\" })\n      .subscribe((res) => {\n        console.log(res, \"check active api res\");\n        if (res && res.success) {\n          this.checkActiveTm = \"\";\n          this.openUserSidenav(true);\n        } else {\n          this.checkActiveTm = res.msg;\n          this.openUserSidenav(true);\n          setTimeout(() => {\n            this.closeSidenav();\n\n          }, 3000);\n          // this.auth.openConfirmDialog(res.msg, \"error\", \"autoClose\");\n        }\n      });\n  }\n  getDisplayName() {\n    const list = [];\n    if (this.grades.value) {\n      this.grades.value.map((each) => {\n        if (typeof each == \"object\") {\n          list.push(each.gradeName);\n        }\n      });\n    }\n    return list.toString();\n  }\n}\n"],"sourceRoot":"webpack:///"}